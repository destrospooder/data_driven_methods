# Data-Driven Dynamical Systems

## Overview: Dynamic Mode Decomposition

Dynamic mode decomposition (DMD) is a dimensionality reduction technique developed in the fluid dynamics community to extract spatiotemporal coherent structures from high-dimensional data. Unlike principal component analysis (PCA) or proper orthogonal decomposition (POD), which focus solely on spatial correlations or energy content, DMD provides a modal decomposition where each mode is associated with a specific oscillation frequency and growth/decay rate. This allows DMD to capture the temporal evolution of the system, in addition to reducing the dimensionality. DMD achieves this by approximating the Koopman operator, which describes the linear dynamics governing the system, rather than just identifying the dominant spatial patterns like PCA/POD. As a result, DMD modes can be more physically meaningful than the orthogonal modes generated by PCA, as they directly correspond to the intrinsic temporal behaviors of the system.

DMD operates on a series of data snapshots, typically obtained from simulations or experiments. These snapshots are organized into a matrix $\textbf{V}$, where:

$$ \textbf{V} = \left[ \textbf{v}_1 \quad \textbf{v}_2 \quad \cdots \quad \textbf{v}_N \right] \in \mathbb{R}^{M \times N}$$

Each $\textbf{v}_i \in \mathbb{R}^M$ represents a snapshot at a specific time. DMD attempts to find a linear operator $\textbf{A}$ that approximates the evolution of the system from one snapshot to the next. 

First, the snapshot data is arranged into two matrices $\textbf{X}$ and $\textbf{X}'$, where $\textbf{X}$ contains the first N-1 snapshots and $\textbf{X}'$ contains the last N-1 snapshots.

The SVD of $\textbf{X}$ is taken. To deal with high-dimensional data, a reduced order representation may be used, by truncating the SVD to the first $r$ modes.

$$ \textbf{X} = \textbf{U} \Sigma \textbf{V}^* \approx \textbf{U}_r \Sigma_r \textbf{V}^*_r$$

The full matrix $\textbf{A}$ is found by computing the pseudo-inverse of $\textbf{X}$:

$$ \textbf{A} = \textbf{X}' \textbf{V}_r \Sigma_r^{-1} \textbf{U}_r^* $$

The next step involves computing the matrix $\tilde{\textbf{A}}$, which is the projection of $\textbf{A}$ onto the subspace spanned by the columns of $\textbf{U}_r$.

$$ \tilde{\textbf{A}} = \textbf{U}_r^* \textbf{A} \textbf{U}_r = \textbf{U}_r^* \textbf{X}' \textbf{V}_r \Sigma_r^{-1} $$

Then, we "eigendecompose" (is that a word?) $\tilde{\textbf{A}}$ to find its eigenvalues $\Lambda$ and eigenvectors $\textbf{W}$. These eigenvalues and eigenvectors are used to compute the DMD modes $\Phi$, which are given by:

$$\Phi = \textbf{X}' \textbf{V}_r \Sigma_r^{-1} \textbf{W}$$

Notably, these high-dimensional DMD modes are also the eigenvectors of the full $\textbf{A}$ matrix corresponding to the eigenvalues in $\Lambda$.

## DMD Analysis of Low Reynolds Number Pitching Airfoil DNS

![mode_amplitudes](images/dmd_analysis_figs/mode_amplitudes.png)
![ux_dmd_modes](images/dmd_analysis_figs/ux_dmd_modes.png)
![uy_dmd_modes](images/dmd_analysis_figs/uy_dmd_modes.png)

## Overview: Sparse Identification of Nonlinear Dynamics

## SINDy Implementation on Temporal Amplitudes

![sindy_fit_rk4](images/sindy_figs/sindy_fit_rk4.png)
![sindy_fit](images/sindy_figs/sindy_fit.png)